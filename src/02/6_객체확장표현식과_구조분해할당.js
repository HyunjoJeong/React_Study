//객체 확장 표현식과 구조 분해 할당

// 객체 확장 표현식
var x = 0;
var y = 3;
var obj1 = { x, y };                          // 객체의 변수를 선언할 때 키값을 생략하면 자동으로 키의 이름으로 키값을 지정한다. 즉, { x: 0, y: 3 }가 된다. (ES6 에서 새로 추가된 방법)
var obj2 = { x: x, y: y};                    // 위와 완전히 동일한 식 좌측의 x는 키 이름, 우측의 x는 키값 (기존 방식)
//var obj3 = { x, y, z}                      // 위와 달리 얘는 z가 존재하지 않는 변수 이므로 오류가 발생.
var obj4 = { x, y, z: 5};                    // 이렇게 하면 되죠 ㅋ

var deco = "th";
var combined = {
   ["4" + deco]: 4,                          // 객체 생성 블록 안에 대괄호[]를 사용하여 표현식을 작성하면 키 이름을 두 string의 concat으로 만들 수 있음.
   ["5" + deco]: 5                           // result : combined = { 4th: 4, 5th: 5 }
}

var obj10 = {
   x,
   methodX() { return x; },                  // 객체 내에 함수를 만들 때 function 키워드 생략 가능 (ES6 에서 새로 추가된 방법)
   //methodA: function() { return "A";}      // 기존의 함수 선언 방법
   methodB() { return "B"; }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 구조 분해와 구조 할당
